AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create a lambda function to copy events from a dynamo db stream to a fifo queue.

Parameters:

  CodeBucketName:
    Type: String
    Description: Bucket containing lambda code zip file
  ZipFileName:
    Type: String
    Default: drainer.zip
  ScheduleExpression:
    Type: String
    Default: "rate(1 minute)"
    Description: >
      Cloud watch event schedule expression used to determine
      how often to execute the function. Align this with the 
      function timeout to have a single lambda execution in
      flight at a time.


Resources:

  TaskQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      VisibilityTimeout: 60
      RedrivePolicy: 
        deadLetterTargetArn: !Sub ${DeadLetterQueue.Arn}
        maxReceiveCount: 10
  DeadLetterQueue: 
    Type: AWS::SQS::Queue

  ScheduledRule: 
    Type: "AWS::Events::Rule"
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: !Ref ScheduleExpression
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "QueueDrainer"
              - "Arn"
          Id: "TargetFunctionV1"

  QueueDrainer:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "drainer.lambda_handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
          S3Bucket: !Ref CodeBucketName
          S3Key: !Ref ZipFileName
      Runtime: "python2.7"
      Timeout: 60

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: metrics
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cloudwatch:PutMetricData
            Resource: '*'
      - PolicyName: queue
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - sqs:ReceiveMessage
            Resource: !Sub ${TaskQueue.Arn}



